name: Docs builds
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
defaults:
  run:
    shell: bash
env:
  FREEZE_REQUIREMENTS: '1'
  PYPI_CACHE_DIR: _pip-wheels
  PYPI_LOCAL_DIR: pypi_pkgs/
  TORCH_URL: https://download.pytorch.org/whl/cpu/
jobs:
  deploy-docs:
    env:
      GCP_TARGET: gs://lightning-docs-${{ matrix.pkg-name }}
      VERSION: ${{ inputs.version || github.ref_name }}
    if: github.repository_owner == 'Lightning-AI' && github.event_name != 'pull_request'
    needs: docs-make
    runs-on: ubuntu-22.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/download-artifact@v4
        with:
          name: docs-${{ matrix.pkg-name }}-${{ github.sha }}
          path: docs/build/html/
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCS_SA_KEY }}
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCS_PROJECT }}
      - if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        name: "Upload docs as archive to GCS \U0001FAA3"
        run: 'zip ${{ env.VERSION }}.zip -r html/

          gsutil cp ${{ env.VERSION }}.zip ${GCP_TARGET}

          '
        working-directory: docs/build
      - id: measurement-5
        name: "Record Measurement After Upload docs as archive to GCS \U0001FAA3"
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: "Upload docs as archive to GCS \U0001FAA3"
          task: get-measurement
      - name: Inject version selector
        run: 'pip install -q wget

          python -m wget https://raw.githubusercontent.com/Lightning-AI/utilities/main/scripts/inject-selector-script.py

          python inject-selector-script.py html ${{ matrix.pkg-name }}

          '
        working-directory: docs/build
      - id: measurement-7
        name: Record Measurement After Inject version selector
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Inject version selector
          task: get-measurement
      - if: startsWith(github.ref, 'refs/heads/release/') && github.event_name ==
          'push'
        name: "Upload docs/${{ matrix.pkg-name }}/stable to GCS \U0001FAA3"
        run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/stable
      - id: measurement-9
        name: "Record Measurement After Upload docs/${{ matrix.pkg-name }}/stable\
          \ to GCS \U0001FAA3"
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: "Upload docs/${{ matrix.pkg-name }}/stable to GCS \U0001FAA3"
          task: get-measurement
      - if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        name: "Upload docs/${{ matrix.pkg-name }}/latest to GCS \U0001FAA3"
        run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/latest
      - id: measurement-11
        name: "Record Measurement After Upload docs/${{ matrix.pkg-name }}/latest\
          \ to GCS \U0001FAA3"
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: "Upload docs/${{ matrix.pkg-name }}/latest to GCS \U0001FAA3"
          task: get-measurement
      - if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        name: "Upload docs/${{ matrix.pkg-name }}/release to GCS \U0001FAA3"
        run: gsutil -m rsync -d -R docs/build/html/ ${GCP_TARGET}/${{ env.VERSION
          }}
      - id: measurement-13
        name: "Record Measurement After Upload docs/${{ matrix.pkg-name }}/release\
          \ to GCS \U0001FAA3"
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: "Upload docs/${{ matrix.pkg-name }}/release to GCS \U0001FAA3"
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        pkg-name:
          - fabric
          - pytorch
  docs-make:
    env:
      ARTIFACT_DAYS: 0
      DOCS_COPY_NOTEBOOKS: 1
      PIN_RELEASE_VERSIONS: 1
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-22.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
        with:
          lfs: ${{ matrix.pkg-name == 'pytorch' }}
          ref: ${{ inputs.checkout }}
          submodules: ${{ matrix.pkg-name == 'pytorch' }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - if: ${{ matrix.pkg-name == 'pytorch' }}
        name: List notebooks
        run: 'pip install -q py-tree

          py-tree .notebooks/

          ls -lhR .notebooks/

          '
        working-directory: _notebooks/
      - id: measurement-4
        name: Record Measurement After List notebooks
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: List notebooks
          task: get-measurement
      - name: Pull sphinx template
        run: 'pip install -q -r requirements/ci.txt

          aws s3 sync --no-sign-request s3://sphinx-packages/ ${PYPI_LOCAL_DIR}

          pip install lai-sphinx-theme -U -f ${PYPI_LOCAL_DIR}

          '
      - id: measurement-6
        name: Record Measurement After Pull sphinx template
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Pull sphinx template
          task: get-measurement
      - name: pip wheels cache
        uses: actions/cache/restore@v4
        with:
          key: pypi_wheels
          path: ${{ env.PYPI_CACHE_DIR }}
      - if: ${{ matrix.pkg-name == 'pytorch' }}
        name: Install pandoc & texlive
        run: 'sudo apt-get update --fix-missing

          sudo apt-get install -y pandoc

          '
        timeout-minutes: 5
      - id: measurement-9
        name: Record Measurement After Install pandoc & texlive
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install pandoc & texlive
          task: get-measurement
      - name: Install package & dependencies
        run: "mkdir -p ${PYPI_CACHE_DIR}  # in case cache was not hit\nls -lh ${PYPI_CACHE_DIR}\n\
          pip install .[all] -U -r requirements/${{ matrix.pkg-name }}/docs.txt \\\
          \n  -f ${PYPI_LOCAL_DIR} -f ${PYPI_CACHE_DIR} --extra-index-url=\"${TORCH_URL}\"\
          \npip list\n"
        timeout-minutes: 20
      - id: measurement-11
        name: Record Measurement After Install package & dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install package & dependencies
          task: get-measurement
      - if: matrix.pkg-name == 'pytorch'
        name: Install req. for Notebooks/tutorials
        run: pip install -q -r _notebooks/.actions/requires.txt
        timeout-minutes: 10
      - id: measurement-13
        name: Record Measurement After Install req. for Notebooks/tutorials
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install req. for Notebooks/tutorials
          task: get-measurement
      - if: github.event_name != 'pull_request'
        name: Full build for deployment
        run: echo "DOCS_FETCH_ASSETS=1" >> $GITHUB_ENV
      - id: measurement-15
        name: Record Measurement After Full build for deployment
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Full build for deployment
          task: get-measurement
      - if: github.event_name != 'workflow_dispatch'
        name: Build without warnings
        run: echo "BUILD_SPHINX_OPTS=-W --keep-going" >> $GITHUB_ENV
      - id: measurement-17
        name: Record Measurement After Build without warnings
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Build without warnings
          task: get-measurement
      - continue-on-error: ${{ (matrix.target == 'doctest' || matrix.target == 'linkcheck')
          && github.event_name == 'workflow_dispatch' }}
        name: Make ${{ matrix.target }}
        run: make ${{ matrix.target }} --debug --jobs $(nproc) SPHINXOPTS="$BUILD_SPHINX_OPTS"
        working-directory: ./docs/source-${{ matrix.pkg-name }}
      - id: measurement-19
        name: Record Measurement After Make ${{ matrix.target }}
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Make ${{ matrix.target }}
          task: get-measurement
      - if: github.event_name == 'pull_request'
        name: Keep artifact
        run: echo "ARTIFACT_DAYS=7" >> $GITHUB_ENV
      - id: measurement-21
        name: Record Measurement After Keep artifact
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Keep artifact
          task: get-measurement
      - if: ${{ matrix.target == 'html' }}
        name: Upload built docs
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: docs-${{ matrix.pkg-name }}-${{ github.sha }}
          path: docs/build/html/
          retention-days: ${{ env.ARTIFACT_DAYS }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        pkg-name:
          - fabric
          - pytorch
        target:
          - html
          - doctest
          - linkcheck
