name: Create Legacy Ckpts
on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash
env:
  LEGACY_FOLDER: tests/legacy
  TORCH_URL: https://download.pytorch.org/whl/cpu/
jobs:
  add-ckpt-test:
    env:
      PL_VERSION: ${{ needs.create-legacy-ckpts.outputs.pl-version }}
    if: inputs.create_pr
    needs: create-legacy-ckpts
    runs-on: ubuntu-22.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Append a new version to legacy checkpoint list
        run: echo ${PL_VERSION} >> back-compatible-versions.txt
        working-directory: ${{ env.LEGACY_FOLDER }}
      - id: measurement-3
        name: Record Measurement After Append a new version to legacy checkpoint list
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Append a new version to legacy checkpoint list
          task: get-measurement
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          assignees: borda
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          body: '**This is automated addition of created checkpoint with the latest
            `${{ env.PL_VERSION }}` `lightning` release!**'
          committer: GitHub <noreply@github.com>
          delete-branch: true
          labels: 'checkpointing

            tests

            pl

            '
          title: Adding test for legacy checkpoint created with ${{ env.PL_VERSION
            }}
          token: ${{ secrets.PAT_GHOST }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
  create-legacy-ckpts:
    outputs:
      pl-version: ${{ steps.decide-version.outputs.pl-version }}
    runs-on: ubuntu-22.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - env:
          FREEZE_REQUIREMENTS: 1
          PACKAGE_NAME: pytorch
        if: inputs.pl_version == ''
        name: Install PL from source
        run: pip install . --extra-index-url="${TORCH_URL}"
        timeout-minutes: 20
      - id: measurement-4
        name: Record Measurement After Install PL from source
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install PL from source
          task: get-measurement
      - if: inputs.pl_version != ''
        name: Install PL version
        run: pip install "pytorch-lightning==${{ inputs.pl_version }}" --extra-index-url="${TORCH_URL}"
        timeout-minutes: 20
      - id: measurement-6
        name: Record Measurement After Install PL version
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install PL version
          task: get-measurement
      - if: ${{ matrix.pkg-name != 'lightning' }}
        name: Adjust tests -> PL
        run: "pip install -q -r .actions/requirements.txt\npython .actions/assistant.py\
          \ copy_replace_imports --source_dir=\"./tests\" \\\n  --source_import=\"\
          lightning.fabric,lightning.pytorch\" \\\n  --target_import=\"lightning_fabric,pytorch_lightning\"\
          \n"
      - id: measurement-8
        name: Record Measurement After Adjust tests -> PL
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Adjust tests -> PL
          task: get-measurement
      - name: Pull legacy checkpoints
        run: bash .actions/pull_legacy_checkpoints.sh
      - id: measurement-10
        name: Record Measurement After Pull legacy checkpoints
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Pull legacy checkpoints
          task: get-measurement
      - id: decide-version
        name: Decide PL version to create a PR with
        run: python -c "import pytorch_lightning as pl; print(f'pl-version={pl.__version__}')"
          >> $GITHUB_OUTPUT || echo pl-version='' >> $GITHUB_OUTPUT
      - id: measurement-12
        name: Record Measurement After Decide PL version to create a PR with
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Decide PL version to create a PR with
          task: get-measurement
      - name: Generate checkpoints
        run: bash generate_checkpoints.sh ${{ inputs.pl_version }}
        working-directory: ${{ env.LEGACY_FOLDER }}
      - id: measurement-14
        name: Record Measurement After Generate checkpoints
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Generate checkpoints
          task: get-measurement
      - if: inputs.upload_local
        name: Rename local to actual version
        run: mv checkpoints/local checkpoints/${{ steps.decide-version.outputs.pl-version
          }}
        working-directory: ${{ env.LEGACY_FOLDER }}
      - id: measurement-16
        name: Record Measurement After Rename local to actual version
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Rename local to actual version
          task: get-measurement
      - name: 'Determine: Keep artifact & DryRun'
        run: 'python -c "print(''KEEP_DAYS='' + str(30 if ''${{ github.event_name
          }}''.startswith(''pull_request'') else 0))" >> $GITHUB_ENV

          python -c "print(''AWS_RUN='' + str('''' if ''${{inputs.push_to_s3}}'' ==
          ''true'' else ''--dryrun''))" >> $GITHUB_ENV

          '
      - id: measurement-18
        name: 'Record Measurement After Determine: Keep artifact & DryRun'
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: 'Determine: Keep artifact & DryRun'
          task: get-measurement
      - name: Upload checkpoints to GitHub Actions artifact
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: checkpoints-${{ github.sha }}
          path: ${{ env.LEGACY_FOLDER }}/checkpoints/
          retention-days: ${{ env.KEEP_DAYS }}
      - name: access secrets
        run: echo "WITH_SECRETS=$([ -n '${{ secrets.AWS_REGION }}' ] && echo 1 ||
          echo 0)" >> $GITHUB_ENV
      - id: measurement-21
        name: Record Measurement After access secrets
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: access secrets
          task: get-measurement
      - run: pip install -r requirements/ci.txt
      - id: measurement-23
        name: Record Measurement After Step
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Step
          task: get-measurement
      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        if: ${{ env.WITH_SECRETS == '1' }}
        name: Upload checkpoints to S3
        run: 'aws s3 sync $AWS_RUN checkpoints/ s3://pl-public-data/legacy/checkpoints/

          zip -r checkpoints.zip checkpoints

          aws s3 cp $AWS_RUN checkpoints.zip s3://pl-public-data/legacy/ --acl public-read

          '
        working-directory: ${{ env.LEGACY_FOLDER }}
      - id: measurement-25
        name: Record Measurement After Upload checkpoints to S3
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Upload checkpoints to S3
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
