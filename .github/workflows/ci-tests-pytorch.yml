name: Test PyTorch

on:
  push:
    branches:
      - temp

concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}

defaults:
  run:
    shell: bash

jobs:
  pl-cpu:
    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    env:
      DISABLE_MPS: ${{ matrix.os == 'macOS-14' && '1' || '0' }}
      FREEZE_REQUIREMENTS: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}
      PACKAGE_NAME: ${{ matrix.pkg-name }}
      PYPI_CACHE_DIR: _pip-wheels
      TORCH_URL: https://download.pytorch.org/whl/cpu/
      TORCH_URL_STABLE: https://download.pytorch.org/whl/cpu/
      TORCH_URL_TEST: https://download.pytorch.org/whl/test/cpu/
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macOS-14
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.1"
            requires: oldest
          - os: ubuntu-22.04
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.1"
            requires: oldest
          - os: windows-2022
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.1"
            requires: oldest
          - os: macOS-14
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.5"
          - os: ubuntu-22.04
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.5"
          - os: windows-2022
            pkg-name: pytorch
            python-version: "3.10"
            pytorch-version: "2.5"
          - os: macOS-14
            pkg-name: pytorch
            python-version: "3.12"
            pytorch-version: "2.7"
          - os: ubuntu-22.04
            pkg-name: pytorch
            python-version: "3.12"
            pytorch-version: "2.7"
          - os: windows-2022
            pkg-name: pytorch
            python-version: "3.12"
            pytorch-version: "2.7"
          - os: macOS-14
            pkg-name: lightning
            python-version: "3.10"
            pytorch-version: "2.1"
          - os: ubuntu-22.04
            pkg-name: lightning
            python-version: "3.10"
            pytorch-version: "2.1"
          - os: windows-2022
            pkg-name: lightning
            python-version: "3.10"
            pytorch-version: "2.1"
          - os: macOS-14
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.2.2"
          - os: ubuntu-22.04
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.2.2"
          - os: windows-2022
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.2.2"
          - os: macOS-14
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.3"
          - os: ubuntu-22.04
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.3"
          - os: windows-2022
            pkg-name: lightning
            python-version: "3.11"
            pytorch-version: "2.3"
          - os: macOS-14
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.4.1"
          - os: ubuntu-22.04
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.4.1"
          - os: windows-2022
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.4.1"
          - os: macOS-14
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.5.1"
          - os: ubuntu-22.04
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.5.1"
          - os: windows-2022
            pkg-name: lightning
            python-version: "3.12.7"
            pytorch-version: "2.5.1"
          - os: macOS-14
            pkg-name: pytorch
            python-version: "3.12.7"
            pytorch-version: "2.6"
          - os: ubuntu-22.04
            pkg-name: pytorch
            python-version: "3.12.7"
            pytorch-version: "2.6"
          - os: windows-2022
            pkg-name: pytorch
            python-version: "3.12.7"
            pytorch-version: "2.6"
    timeout-minutes: 50
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Basic setup
        run: pip install -q -r .actions/requirements.txt

      - name: Set minimal dependencies
        if: ${{ matrix.requires == 'oldest' }}
        run: |
          python .actions/assistant.py replace_oldest_ver
          pip install "cython<3.0" wheel
          pip install "pyyaml==5.4" --no-build-isolation

      - name: Adjust PyTorch versions
        if: ${{ matrix.requires != 'oldest' }}
        run: |
          pip install -q -r requirements/ci.txt
          wget https://raw.githubusercontent.com/Lightning-AI/utilities/main/scripts/adjust-torch-versions.py
          for f in $(ls requirements/**/*.txt); do
            python adjust-torch-versions.py $f ${{ matrix.pytorch-version }}
          done
          cat requirements/pytorch/base.txt

      - name: pip wheels cache
        uses: actions/cache/restore@v4
        with:
          key: pypi_wheels
          path: ${{ env.PYPI_CACHE_DIR }}

      - run: mkdir -p $PYPI_CACHE_DIR && ls -lh $PYPI_CACHE_DIR

      - name: Set environment variables
        run: |
          echo "TORCH_URL=${{ matrix.pytorch-version == '2.7' && env.TORCH_URL_TEST || env.TORCH_URL_STABLE }}" >> $GITHUB_ENV
          echo "COVERAGE_SCOPE=${{ matrix.pkg-name == 'lightning' && 'lightning' || 'pytorch_lightning' }}" >> $GITHUB_ENV
          echo "EXTRA_PREFIX=${{ matrix.pkg-name == 'lightning' && 'pytorch-' || '' }}" >> $GITHUB_ENV
          if [[ "${{ matrix.os }}" == "windows-2022" && "${{ matrix.pytorch-version }}" == "2.4" ]]; then
            echo "USE_LIBUV=0" >> $GITHUB_ENV
          fi

      - name: Install package & dependencies
        run: |
          pip install ".[${EXTRA_PREFIX}extra,${EXTRA_PREFIX}test,${EXTRA_PREFIX}strategies]" \
            -U --upgrade-strategy=eager --prefer-binary \
            -r requirements/_integrations/accelerators.txt \
            --extra-index-url="${TORCH_URL}" --find-links="${PYPI_CACHE_DIR}"
          pip list
        timeout-minutes: 20

      - if: ${{ matrix.pkg-name != 'lightning' }}
        name: Drop LAI from extensions
        run: pip uninstall -y lightning

      - if: ${{ matrix.pkg-name == 'lightning' }}
        name: Drop PL for LAI
        run: pip uninstall -y pytorch-lightning

      - if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        name: Dump handy wheels
        continue-on-error: true
        uses: ./.github/actions/pip-wheels
        with:
          cache-key: pypi_wheels
          torch-url: ${{ env.TORCH_URL }}
          wheel-dir: ${{ env.PYPI_CACHE_DIR }}

      - name: Cache datasets
        uses: actions/cache@v4
        with:
          key: pl-dataset
          path: Datasets

      - name: Sanity check
        run: |
          python requirements/pytorch/check-avail-extras.py
          python -c "from torch import __version__ as ver; assert ver.startswith('${{ matrix.pytorch-version }}'), ver"

      - if: ${{ matrix.pkg-name != 'lightning' }}
        name: Adjust tests / env. -> PL
        run: |
          python .actions/assistant.py copy_replace_imports \
            --source_dir="./tests" \
            --source_import="lightning.fabric,lightning.pytorch" \
            --target_import="lightning_fabric,pytorch_lightning"

      - name: Prevent using raw source
        run: rm -rf src/

      - name: Get legacy checkpoints
        run: |
          bash .actions/pull_legacy_checkpoints.sh
          cd tests/legacy
          bash generate_checkpoints.sh
          ls -l checkpoints/

      - name: Testing Warnings
        run: python utilities/test_warnings.py
        working-directory: tests/tests_pytorch

      - name: Testing PyTorch
        run: |
          echo $GITHUB_RUN_ID
          python -m coverage run --source ${{ env.COVERAGE_SCOPE }} \
            -m pytest . -v --timeout=90 --durations=50 --random-order-seed=$GITHUB_RUN_ID \
            --junitxml=junit.xml -o junit_family=legacy
        working-directory: tests/tests_pytorch

      - if: success()
        name: Statistics
        run: |
          coverage report
          coverage xml
        working-directory: tests/tests_pytorch

      # - if: ${{ !cancelled() }}
      #   name: Upload test results to Codecov
      #   uses: codecov/test-results-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}

      # - continue-on-error: true
        # name: Upload coverage to Codecov
        # uses: codecov/codecov-action@v5
        # with:
        #   fail_ci_if_error: false
        #   file: tests/tests_pytorch/coverage.xml
        #   flags: ${{ env.COVERAGE_SCOPE }},cpu,pytest-full,python${{ matrix.python-version }},pytorch${{ matrix.pytorch-version }}
        #   name: CPU-coverage
        #   token: ${{ secrets.CODECOV_TOKEN }}

      - name: Display Energy Results
        id: display-measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results

      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.display-measurement.outputs.data-total-json }}' > total_energy_consumption.json

      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json

  pl-cpu-guardian:
    if: always()
    needs: pl-cpu
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement

      - run: echo "${{ needs.pl-cpu.result }}"

      - if: needs.pl-cpu.result == 'failure'
        name: failing...
        run: exit 1

      - if: contains(fromJSON('["cancelled", "skipped"]'), needs.pl-cpu.result)
        name: cancelled or skipped...
        run: sleep 90
        timeout-minutes: 1

      - name: Display Energy Results
        id: display-measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results

      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.display-measurement.outputs.data-total-json }}' > total_energy_consumption.json

      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
